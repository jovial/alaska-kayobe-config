---
# Kayobe network configuration.

###############################################################################
# Network role to network mappings.

# Name of the network used for admin access to the overcloud
#admin_oc_net_name:

# Name of the network used by the seed to manage the bare metal overcloud
# hosts via their out-of-band management controllers.
#oob_oc_net_name:
oob_oc_net_name: 'alaska_mgmt'

# Name of the network used by the seed to provision the bare metal overcloud
# hosts.
#provision_oc_net_name:
provision_oc_net_name: 'alaska_ctl'

# Name of the network used by the overcloud hosts to manage the bare metal
# compute hosts via their out-of-band management controllers.
#oob_wl_net_name:
oob_wl_net_name: 'alaska_mgmt'

# Name of the network used by the overcloud hosts to provision the bare metal
# workload hosts.
#provision_wl_net_name:
provision_wl_net_name: 'alaska_prv'

# Name of the network used to expose the internal OpenStack API endpoints.
#internal_net_name:
internal_net_name: 'alaska_prv'

# List of names of networks used to provide external network access via
# Neutron.
# Deprecated name: external_net_name
# If external_net_name is defined, external_net_names will default to a list
# containing one item, external_net_name.
#external_net_names:
external_net_names:
  - 'ilab'
  - 'alaska_bdn'

# Name of the network used to expose the public OpenStack API endpoints.
#public_net_name:
public_net_name: 'ilab'

# Name of the network used by Neutron to carry tenant overlay network traffic.
#tunnel_net_name:

# Name of the network used to carry storage data traffic.
#storage_net_name:
storage_net_name: 'alaska_prv'

# Name of the network used to carry storage management traffic.
#storage_mgmt_net_name:
storage_mgmt_net_name: 'alaska_prv'

# Name of the network used to carry ceph storage data traffic.
#ceph_storage_net_name:

# Name of the network used to carry ceph storage management traffic.
#ceph_storage_mgmt_net_name:

# Name of the network used to carry swift storage data traffic.
#swift_storage_net_name:

# Name of the network used to carry swift storage replication traffic.
#swift_storage_replication_net_name:

# Name of the network used to perform hardware introspection on the bare metal
# workload hosts.
#inspection_net_name:
inspection_net_name: 'alaska_prv'

# Name of the network used to perform cleaning on the bare metal workload
# hosts
#cleaning_net_name:

###############################################################################
# Network definitions.

# iLab network IP information.
ilab_cidr: 10.60.0.0/16
# Pool for use by kayobe.
ilab_allocation_pool_start: 10.60.253.129
ilab_allocation_pool_end: 10.60.253.134
# Pool for use by neutron.
ilab_neutron_allocation_pool_start: 10.60.253.135
ilab_neutron_allocation_pool_end: 10.60.253.191
ilab_gateway: 10.60.255.1
ilab_vlan: 60
# VIP address for external API endpoints.
ilab_vip_address: 10.60.253.128
ilab_mtu: 1500
ilab_physical_network: "{{ alaska_cp_physical_network }}"
ilab_routes:
  # Route to the storage network via the control & provisioning network switch.
  - cidr: 10.4.0.0/16
    gateway: 10.60.253.255

# Power and management network IP information.
alaska_mgmt_cidr: 10.45.0.0/16
# Pool for use by kayobe.
alaska_mgmt_allocation_pool_start: 10.45.253.103
alaska_mgmt_allocation_pool_end: 10.45.253.103
alaska_mgmt_vlan: 45

# Control plane provisioning network IP information.
alaska_ctl_cidr: 10.41.0.0/16
# Pool for use by kayobe.
alaska_ctl_allocation_pool_start: 10.41.253.103
alaska_ctl_allocation_pool_end: 10.41.253.103
# Pool for use by bifrost's dnsmasq service during hardware inspection.
alaska_ctl_inspection_allocation_pool_start: 10.41.253.110
alaska_ctl_inspection_allocation_pool_end: 10.41.253.120
alaska_ctl_vlan: 41

# Workload provisioning network IP information.
alaska_prv_cidr: 192.168.7.0/24
# Pool for use by kayobe.
alaska_prv_allocation_pool_start: 192.168.7.2
alaska_prv_allocation_pool_end: 192.168.7.9
# Pool for use by ironic inspector during hardware inspection.
alaska_prv_inspection_allocation_pool_start: 192.168.7.10
alaska_prv_inspection_allocation_pool_end: 192.168.7.127
# Pool for use by neutron during baremetal provisioning.
alaska_prv_neutron_allocation_pool_start: 192.168.7.128
alaska_prv_neutron_allocation_pool_end: 192.168.7.254
alaska_prv_vlan: 8
# VIP address for internal API endpoints.
alaska_prv_vip_address: 192.168.7.1
alaska_prv_mtu: 1500
alaska_prv_physical_network: "{{ alaska_cp_physical_network }}"

# Physical network name for the control & provisioning network.
alaska_cp_physical_network: physnet1

# Internal VLAN for Bulk Data Network switches
# This VLAN is internal to the BDN switches, and not visible
# to the connected nodes (all ports are untagged).  However,
# it cannot be VLAN 1, and it should not overlap with any other
# VLAN on the BDN.  The VLAN requires an IP interface assigning
# in order to handle multicast querying and routing.
alaska_bdn_vlan: 8
alaska_bdn_physical_network: physnet2
alaska_bdn_mtu: 9000

# Low Latency Network (LLN) - Infiniband.
alaska_lln_physical_network: physnet3

# Cleaning network IP information.
# cleaning_net_cidr:
# cleaning_net_allocation_pool_start:
# cleaning_net_allocation_pool_end:
# cleaning_net_neutron_allocation_pool_start:
# cleaning_net_neutron_allocation_pool_end:
# cleaning_net_gateway:
# cleaning_net_vlan:
# cleaning_net_mtu:
# cleaning_net_routes:

###############################################################################
# Network virtual patch link configuration.

# Suffix for Open vSwitch bridge names.
#network_bridge_suffix_ovs:

# Prefix for virtual patch interface names.
#network_patch_prefix:

# Suffix for virtual patch link interface names when connected towards the
# physical interface.
#network_patch_suffix_phy:

# Suffix for virtual patch link interface names when connected towards the
# OVS bridge.
#network_patch_suffix_ovs:

###############################################################################
# Network routing table configuration.

# List of IP routing tables. Each item should be a dict containing 'id' and
# 'name' items. These tables will be added to /etc/iproute2/rt_tables.
#network_route_tables:

###############################################################################
# Dummy variable to allow Ansible to accept this file.
workaround_ansible_issue_8743: yes
